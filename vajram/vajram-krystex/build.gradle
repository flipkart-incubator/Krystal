plugins {
    id 'com.flipkart.krystal' version "${krystal_version}"
}

description 'An implementation of a vajram executor powered by the Krystex module.'

dependencies {
    api project(':vajram')
    api project(':krystex')

    annotationProcessor 'com.flipkart.krystal:krystal-plugin:' + krystal_version

    def jacksonVersion = '2.14.2'
    testImplementation 'com.fasterxml.jackson.core:jackson-annotations:' + jacksonVersion
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:' + jacksonVersion
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:' + jacksonVersion
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:' + jacksonVersion
    testImplementation 'org.assertj:assertj-core:3.23.1'

    testAnnotationProcessor 'com.flipkart.krystal:krystal-plugin:' + krystal_version
}

tasks.named('testCodeGenVajramModels').configure {
    doFirst {
        def moduleName = 'flipkart.krystal.vajramexecutor.krystex'
        options.compilerArgs += modulePathArgs(moduleName)
    }
}

compileTestJava {
    doFirst {
        def moduleName = 'flipkart.krystal.vajramexecutor.krystex'
        options.compilerArgs += modulePathArgs(moduleName)
        options.compilerArgs += [
                '--module-path', classpath.asPath,
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
        ]
    }
}

project.tasks.compileTestJava.dependsOn 'testCodeGenVajramModels'

test {
    doFirst {
        def moduleName = 'flipkart.krystal.vajramexecutor.krystex'
        jvmArgs += modulePathArgs(moduleName)
        jvmArgs += [
                '--add-exports', "$moduleName/com.flipkart.krystal.vajramexecutor.krystex.test_vajrams.friendsservice=flipkart.krystal.vajram,com.fasterxml.jackson.databind",
                '--add-exports', "$moduleName/com.flipkart.krystal.vajramexecutor.krystex.test_vajrams.hello=flipkart.krystal.vajram,com.fasterxml.jackson.databind",
                '--add-exports', "$moduleName/com.flipkart.krystal.vajramexecutor.krystex.test_vajrams.hellofriends=flipkart.krystal.vajram,com.fasterxml.jackson.databind",
                '--add-exports', "$moduleName/com.flipkart.krystal.vajramexecutor.krystex.test_vajrams.hellofriendsv2=flipkart.krystal.vajram,com.fasterxml.jackson.databind",
                '--add-exports', "$moduleName/com.flipkart.krystal.vajramexecutor.krystex.test_vajrams.multihello=flipkart.krystal.vajram,com.fasterxml.jackson.databind",
                '--add-exports', "$moduleName/com.flipkart.krystal.vajramexecutor.krystex.test_vajrams.multihellov2=flipkart.krystal.vajram,com.fasterxml.jackson.databind",
                '--add-exports', "$moduleName/com.flipkart.krystal.vajramexecutor.krystex.test_vajrams.mutualFriendsHello=flipkart.krystal.vajram,com.fasterxml.jackson.databind",
                '--add-exports', "$moduleName/com.flipkart.krystal.vajramexecutor.krystex.test_vajrams.userservice=flipkart.krystal.vajram,com.fasterxml.jackson.databind",

                '--add-opens', "flipkart.krystal.krystex/com.flipkart.krystal.krystex.decorators.observability=com.fasterxml.jackson.databind",
                '--add-opens', "$moduleName/com.flipkart.krystal.vajramexecutor.krystex=org.junit.platform.commons",
        ]
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.flipkart.krystal'
            artifactId = project.name
            version = project.krystal_version
            from components.java
            pom {
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }

    tasks.named("spotlessJava").configure { dependsOn("codeGenVajramModels") }
    tasks.named("spotlessJava").configure { dependsOn("testCodeGenVajramModels") }
}

private static ArrayList<String> modulePathArgs(String moduleName) {
    [
            '--add-modules', 'flipkart.krystal.krystex',
            '--add-reads', "$moduleName=flipkart.krystal.krystex",

            '--add-modules', 'org.junit.jupiter.api',
            '--add-reads', "$moduleName=org.junit.jupiter.api",

            '--add-modules', 'org.junit.jupiter.params',
            '--add-reads', "$moduleName=org.junit.jupiter.params",

            '--add-modules', 'org.assertj.core',
            '--add-reads', "$moduleName=org.assertj.core",

            '--add-modules', 'com.fasterxml.jackson.annotation',
            '--add-reads', "$moduleName=com.fasterxml.jackson.annotation",

            '--add-modules', 'com.fasterxml.jackson.databind',
            '--add-reads', "$moduleName=com.fasterxml.jackson.databind",

            '--add-modules', 'com.fasterxml.jackson.datatype.jdk8',
            '--add-reads', "$moduleName=com.fasterxml.jackson.datatype.jdk8",

            '--add-modules', 'com.fasterxml.jackson.datatype.jsr310',
            '--add-reads', "$moduleName=com.fasterxml.jackson.datatype.jsr310",
    ]
}
